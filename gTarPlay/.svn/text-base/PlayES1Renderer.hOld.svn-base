//
//  PlayES1Renderer.h
//  gTarPlay
//
//  Created by Marty Greenia on 3/10/11.
//  Copyright 2011 Msft. All rights reserved.
//

#import <gTar.h>

#import <ES1Renderer.h>

#import <NoteModel.h>
#import <StringModel.h>
#import <LineModel.h>
#import <NumberModel.h>
#import <TextModel.h>
#import <Animation.h>
#import <NoteAnimation.h>

#import <SongModel.h>

#define GL_ORTHO_LEFT (0.0f)
#define GL_ORTHO_RIGHT (m_backingWidth)
#define GL_ORTHO_TOP (m_backingHeight)
#define GL_ORTHO_BOTTOM (0.0f)
#define GL_ORTHO_NEAR (-1.0f)
#define GL_ORTHO_FAR (+1.0f)

#define GL_SCREEN_HEIGHT (GL_ORTHO_TOP - GL_ORTHO_BOTTOM)
#define GL_SCREEN_WIDTH (GL_ORTHO_RIGHT - GL_ORTHO_LEFT)

// empirically determined ratios defining screen layout for what looks good.
#define GL_SCREEN_TOP_BUFFER ( GL_SCREEN_HEIGHT / 6.0 )
#define GL_SCREEN_BOTTOM_BUFFER ( GL_SCREEN_HEIGHT / 3.5 )
#define GL_SCREEN_SEEK_LINE_OFFSET ( GL_SCREEN_WIDTH / 8.0 * 2.0)

#define GL_NOTE_HEIGHT ( GL_SCREEN_HEIGHT / 8.0 )
#define GL_STRING_HEIGHT ( GL_SCREEN_HEIGHT / 50.0 )
#define GL_STRING_HEIGHT_INCREMENT ( GL_SCREEN_HEIGHT / 320.0 ) 


#define PLAY_COUNTDOWN_LENGTH 4

#define PLAY_BEATS_PER_SCREEN 4
#define PLAY_PIXELS_PER_BEAT (GL_SCREEN_WIDTH / PLAY_BEATS_PER_SCREEN)

// red, orange, yellow, green, blue, purple
// red orange green yellow blue purple 

static unsigned char g_whiteColor[4] =
{ 255, 255, 255, 255 };

static unsigned char g_whiteColorQuads[16] =
{ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255 };

static unsigned char g_grayColor[4] =
{ 127, 127, 127, 255 };

static unsigned char g_grayColorQuads[16] =
{ 127, 127, 127, 255, 127, 127, 127, 255, 127, 127, 127, 255, 127, 127, 127, 255 };


static unsigned char g_stringColors[6][4] = 
{ 
	{ 255, 0, 0, 255 }, // R
	{ 255, 128, 0, 255 }, // O
	{ 255, 255, 0, 255 }, // Y
	{ 0, 255, 0, 255 }, // G
	{ 0, 0, 255, 255 }, // B
	{ 128, 0, 128, 255 } // P
};

static unsigned char g_stringColorsQuads[6][16] = 
{ 
	{ 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255 }, // red
	{ 255, 128, 0, 255, 255, 128, 0, 255, 255, 128, 0, 255, 255, 128, 0, 255 }, //oran
	{ 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255 }, //yelo
	{ 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255 }, // gre
	{ 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255 }, // blue 
	{ 128, 0, 128, 255, 128, 0, 128, 255, 128, 0, 128, 255, 128, 0, 128, 255 } //pur
};

static unsigned char g_measureColors[4] = 
{ 255, 255, 0, 255 };

@interface PlayES1Renderer : ES1Renderer
{

	// ortho view state
	GLfloat m_currentPosition;
	
	SongModel * m_songModel;
	
	// Notes array
	NSMutableArray * m_noteModels;
	NSMutableArray * m_stringModels;	
	NSMutableArray * m_numberModels;
	NSMutableArray * m_lineModels;
//	NSMutableArray * m_countdownModels;

	LineModel * m_seekLineModel;

	NSMutableArray * m_noteAnimations;
	
	NSUInteger m_currentCountdown;

}

- (id)initWithSong:(SongModel*)song;

- (void)createModelTextures;
- (void)releaseModelTextures;

// Creation
- (void)createStringModels;
- (void)createNumberModels;
- (void)createCountdownModels;
- (void)createNoteModels:(NoteArray*)noteArray;
- (void)createLineModels:(MeasureArray*)measureArray;

// Helpers
- (GLfloat)convertBeatToCoordSpace:(CGFloat)beat;
- (GLfloat)convertStringToCoordSpace:(NSInteger)str;

// External
- (void)updateCurrentPosition;
- (void)countdownOn:(NSInteger)count;
- (void)countdownOff;
- (void)animateNoteWithIndex:(NSInteger)index;
- (void)resetAnimations;

@end
